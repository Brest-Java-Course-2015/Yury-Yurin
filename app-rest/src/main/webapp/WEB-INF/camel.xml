<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://camel.apache.org/schema/spring
                           http://camel.apache.org/schema/spring/camel-spring.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <mvc:annotation-driven/>

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:app.properties</value>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath*:create-table-applications.sql"/>
        <jdbc:script location="classpath*:create-table-mailfunctions.sql"/>
        <jdbc:script location="classpath*:data-script.sql"/>
    </jdbc:initialize-database>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="myRouteConfig" class="com.epam.brest.course2015.project.rest.ApplicationRestController" />

    <camel:camelContext id="defaultCamelContext">
        <camel:routeBuilder ref="myRouteConfig"/>
    </camel:camelContext>

    <bean id="RestletComponent" class="org.restlet.Component"/>

    <bean id="RestletComponentService" class="org.apache.camel.component.restlet.RestletComponent">
        <constructor-arg ref="RestletComponent" />
    </bean>

    <bean id="malfunctionDao" class="com.epam.brest.course2015.project.dao.MalfunctionDaoImpl">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="malfunctionService" class="com.epam.brest.course2015.project.service.MalfunctionServiceImpl">
        <property name="malfunctionDao" ref="malfunctionDao"/>
    </bean>

    <bean id="applicationDao" class="com.epam.brest.course2015.project.dao.ApplicationDaoImpl">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="applicationService" class="com.epam.brest.course2015.project.service.ApplicationServiceImpl">
        <property name="applicationDao" ref="applicationDao"/>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonConverter"/>
            </list>
        </property>
    </bean>
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes" value="application/json" />
        <property name="prettyPrint" value="true" />
    </bean>

    <mvc:cors>
        <mvc:mapping path="/**"/>
    </mvc:cors>

</beans>